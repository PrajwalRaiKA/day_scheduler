// Mocks generated by Mockito 5.4.6 from annotations
// in day_scheduler/test/unit/domain/usecases/goal_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:day_scheduler/features/goals/data/goals_repository_impl.dart'
    as _i2;
import 'package:day_scheduler/features/goals/domain/entities/goal.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IGoalsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIGoalsRepository extends _i1.Mock implements _i2.IGoalsRepository {
  MockIGoalsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Goal>> getGoalsByDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#getGoalsByDate, [date]),
            returnValue: _i3.Future<List<_i4.Goal>>.value(<_i4.Goal>[]),
          )
          as _i3.Future<List<_i4.Goal>>);

  @override
  _i3.Future<void> addGoal(_i4.Goal? goal) =>
      (super.noSuchMethod(
            Invocation.method(#addGoal, [goal]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateGoal(_i4.Goal? goal) =>
      (super.noSuchMethod(
            Invocation.method(#updateGoal, [goal]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deleteGoal(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGoal, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
